### Generic smell configuration

# You can disable smells completely
IrresponsibleModule:
  enabled: false

# You can use filters to silence Reek warnings.
# Either because you simply disagree with Reek (we are not the police) or
# because you want to fix this at a later point in time.
NestedIterators:
  exclude:
    - "MyWorker#self.class_method" # should be refactored
    - "AnotherWorker#instance_method" # should be refactored as well

# A lot of smells allow fine tuning their configuration. You can look up all
# available options in the corresponding smell documentation in /docs. In most
# cases you probably can just go with the defaults as documented in
# defaults.reek.

Attribute:
  enabled: true
  exclude: []

BooleanParameter:
  enabled: true
  exclude: []

ClassVariable:
  enabled: true
  exclude: []

ControlParameter:
  enabled: true
  exclude: []

DataClump:
  enabled: true
  exclude: []
  max_copies: 2
  min_clump_size: 2

DuplicateMethodCall:
  enabled: true
  exclude: []
  max_calls: 1
  allow_calls: []

FeatureEnvy:
  enabled: true
  exclude: []

IrresponsibleModule:
  enabled: true
  exclude: ["PrivateClassMethods", "PrivateModuleMethods"]

LongParameterList:
  enabled: true
  exclude: []
  max_params: 3
  overrides:
    initialize:
      max_params: 5

LongYieldList:
  enabled: true
  exclude: []
  max_params: 3

ModuleInitialize:
  enabled: true
  exclude: []

NestedIterators:
  enabled: true
  exclude: []
  max_allowed_nesting: 2
  ignore_iterators:
  - tap

NilCheck:
  enabled: true
  exclude: []

PrimaDonnaMethod:
  enabled: true
  exclude: []

RepeatedConditional:
  enabled: true
  exclude: []
  max_ifs: 2

TooManyInstanceVariables:
  enabled: true
  exclude: []
  max_instance_variables: 4

TooManyMethods:
  enabled: true
  exclude: []
  max_methods: 15

TooManyStatements:
  enabled: true
  exclude:
  - initialize
  max_statements: 6

UncommunicativeMethodName:
  enabled: true
  exclude: []
  reject:
  - !ruby/regexp /^[a-z]$/
  - !ruby/regexp /[0-9]$/
  - !ruby/regexp /[A-Z]/
  accept: []

UncommunicativeModuleName:
  enabled: true
  exclude: []
  reject:
  - !ruby/regexp /^.$/
  - !ruby/regexp /[0-9]$/
  accept: []

UncommunicativeParameterName:
  enabled: true
  exclude: []
  reject:
  - !ruby/regexp /^.$/
  - !ruby/regexp /[0-9]$/
  - !ruby/regexp /[A-Z]/
  - !ruby/regexp /^_/
  accept: []

UncommunicativeVariableName:
  enabled: true
  exclude: []
  reject:
  - !ruby/regexp /^.$/
  - !ruby/regexp /[0-9]$/
  - !ruby/regexp /[A-Z]/
  accept:
  - _

UnusedParameters:
  enabled: true
  exclude: []

UnusedPrivateMethod:
  enabled: false
  excludes: []

UtilityFunction:
  public_methods_only: true
  enabled: true
  exclude: []

### Directory specific configuration

# You can configure smells on a per-directory base.
# E.g. the classic Rails case: controllers smell of NestedIterators (see /docs/Nested-Iterators.md) and
# helpers smell of UtilityFunction (see docs/Utility-Function.md)
"web_app/app/controllers":
  NestedIterators:
    enabled: false
"web_app/app/helpers":
  UtilityFunction:
    enabled: false

### Excluding directories

# Directories below will not be scanned at all
exclude_paths:
  - lib/legacy
  - lib/rake/legacy_tasks
